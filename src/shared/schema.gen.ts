/* eslint-disable */
/* tslint:disable */
// noinspection JSUnusedGlobalSymbols
// biome-ignore-all
/*
 * ------------------------------------------------------------
 * ## This file was automatically generated by drizzle-zero. ##
 * ## Any changes you make to this file will be overwritten. ##
 * ##                                                        ##
 * ## Additionally, you should also exclude this file from   ##
 * ## your linter and/or formatter to prevent it from being  ##
 * ## checked or modified.                                   ##
 * ##                                                        ##
 * ## SOURCE: https://github.com/0xcadams/drizzle-zero        ##
 * ------------------------------------------------------------
 */

import type { ZeroCustomType } from "drizzle-zero";
import type * as drizzleSchema from "../db/schema";
import type { DrizzleToZeroSchema } from "drizzle-zero";

type ZeroSchema = DrizzleToZeroSchema<typeof drizzleSchema>;

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
  tables: {
    account: {
      name: "account",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "id"
          >,
        },
        accountId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "accountId"
          >,
          serverName: "account_id",
        },
        providerId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "providerId"
          >,
          serverName: "provider_id",
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "userId"
          >,
          serverName: "user_id",
        },
        accessToken: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "accessToken"
          >,
          serverName: "access_token",
        },
        refreshToken: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "refreshToken"
          >,
          serverName: "refresh_token",
        },
        idToken: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "idToken"
          >,
          serverName: "id_token",
        },
        accessTokenExpiresAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "accessTokenExpiresAt"
          >,
          serverName: "access_token_expires_at",
        },
        refreshTokenExpiresAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "refreshTokenExpiresAt"
          >,
          serverName: "refresh_token_expires_at",
        },
        scope: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "scope"
          >,
        },
        password: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "password"
          >,
        },
        createdAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    availabilitySchedule: {
      name: "availabilitySchedule",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "availabilitySchedule",
            "id"
          >,
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "availabilitySchedule",
            "userId"
          >,
          serverName: "user_id",
        },
        dayOfWeek: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "availabilitySchedule",
            "dayOfWeek"
          >,
          serverName: "day_of_week",
        },
        startTime: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "availabilitySchedule",
            "startTime"
          >,
          serverName: "start_time",
        },
        endTime: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "availabilitySchedule",
            "endTime"
          >,
          serverName: "end_time",
        },
        createdAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "availabilitySchedule",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "availabilitySchedule",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
      serverName: "availability_schedule",
    },
    booking: {
      name: "booking",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "booking",
            "id"
          >,
        },
        eventTypeId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "booking",
            "eventTypeId"
          >,
          serverName: "event_type_id",
        },
        hostId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "booking",
            "hostId"
          >,
          serverName: "host_id",
        },
        guestName: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "booking",
            "guestName"
          >,
          serverName: "guest_name",
        },
        guestEmail: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "booking",
            "guestEmail"
          >,
          serverName: "guest_email",
        },
        startTime: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "booking",
            "startTime"
          >,
          serverName: "start_time",
        },
        endTime: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "booking",
            "endTime"
          >,
          serverName: "end_time",
        },
        status: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "booking",
            "status"
          >,
        },
        notes: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "booking",
            "notes"
          >,
        },
        createdAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "booking",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "booking",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    eventType: {
      name: "eventType",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "eventType",
            "id"
          >,
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "eventType",
            "userId"
          >,
          serverName: "user_id",
        },
        title: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "eventType",
            "title"
          >,
        },
        description: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "eventType",
            "description"
          >,
        },
        duration: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "eventType",
            "duration"
          >,
        },
        color: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "eventType",
            "color"
          >,
        },
        active: {
          type: "boolean",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "eventType",
            "active"
          >,
        },
        createdAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "eventType",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "eventType",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
      serverName: "event_type",
    },
    session: {
      name: "session",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "id"
          >,
        },
        expiresAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "expiresAt"
          >,
          serverName: "expires_at",
        },
        token: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "token"
          >,
        },
        createdAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
        ipAddress: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "ipAddress"
          >,
          serverName: "ip_address",
        },
        userAgent: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "userAgent"
          >,
          serverName: "user_agent",
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "userId"
          >,
          serverName: "user_id",
        },
      },
      primaryKey: ["id"],
    },
    user: {
      name: "user",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "name"
          >,
        },
        email: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "email"
          >,
        },
        emailVerified: {
          type: "boolean",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "emailVerified"
          >,
          serverName: "email_verified",
        },
        image: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "image"
          >,
        },
        createdAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    verification: {
      name: "verification",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verification",
            "id"
          >,
        },
        identifier: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verification",
            "identifier"
          >,
        },
        value: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verification",
            "value"
          >,
        },
        expiresAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verification",
            "expiresAt"
          >,
          serverName: "expires_at",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verification",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verification",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
  },
  relationships: {
    availabilitySchedule: {
      user: [
        {
          sourceField: ["userId"],
          destField: ["id"],
          destSchema: "user",
          cardinality: "one",
        },
      ],
    },
    booking: {
      eventType: [
        {
          sourceField: ["eventTypeId"],
          destField: ["id"],
          destSchema: "eventType",
          cardinality: "one",
        },
      ],
      host: [
        {
          sourceField: ["hostId"],
          destField: ["id"],
          destSchema: "user",
          cardinality: "one",
        },
      ],
    },
    eventType: {
      user: [
        {
          sourceField: ["userId"],
          destField: ["id"],
          destSchema: "user",
          cardinality: "one",
        },
      ],
      bookings: [
        {
          sourceField: ["id"],
          destField: ["eventTypeId"],
          destSchema: "booking",
          cardinality: "many",
        },
      ],
    },
    user: {
      eventTypes: [
        {
          sourceField: ["id"],
          destField: ["userId"],
          destSchema: "eventType",
          cardinality: "many",
        },
      ],
      availabilitySchedules: [
        {
          sourceField: ["id"],
          destField: ["userId"],
          destSchema: "availabilitySchedule",
          cardinality: "many",
        },
      ],
      hostBookings: [
        {
          sourceField: ["id"],
          destField: ["hostId"],
          destSchema: "booking",
          cardinality: "many",
        },
      ],
    },
  },
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
